TdfsGrabBar v1.16

Description:
  A bar that allows two TWinControl components to be resized by dragging it.


Contact Information:
  The lateset version will always be available on the web at:
    http://www.delphifreestuff.com
  If you have any questions, comments or suggestions, please use the Delphi
  Free Stuff Support Forum at: 
    http://www.delphifreestuff.com/discus/
  If, for some reason, you can not use the web-based support forum, you can
  email me at bstowers@delphifreestuff.com.  However, the support forum will
  always take precedence over direct email since it provides a resource that
  others can use when they have a problem.  Every message posted to the forum
  is emailed directly to this account, so emailing me directly will not get 
  your message to me any faster.  It will only make the message less important
  for me to respond to since only one person (you) is benefiting from it
  instead of everyone interested.  Having said all that, please do email me 
  directly if it is regarding something that isn't really support related, 
  i.e. just to say thanks (as novel as that idea is).  


Installation:
  Delphi 1:
    * Select the 'Options | Install Components' menu item.
    * In the Install Components dialog, click the Add button.
    * In the Add Module dialog, enter the full path name of the component's 
      registration unit (the unit that ends with 'Reg.pas', i.e. 
      'BrowseDrReg.pas') and click OK.
    * In the Add Module dialog, click OK.
    * The component library will be rebuilt and a new tab named 'DFS' will
      be available on the Component Palette.
  
  Delphi 2, C++Builder 1:
    * Select the 'Component | Install' menu item.
    * In the Install Components dialog, click the Add button.
    * In the Add Module dialog, enter the full path name of the component's 
      registration unit (the unit that ends with 'Reg.pas', i.e. 
      'BrowseDrReg.pas') and click OK.
    * In the Add Module dialog, click OK.
    * The component library will be rebuilt and a new tab named 'DFS' will be 
      available on the Component Palette.
  
  Delphi 3, 4, 5, C++Builder 3 & 4:
    * Do one of the following:
      + Create a new package by selecting File | New and choosing Package from
        the New tab in the dialog.
      + Open an existing package file.  I suggest you do this if you already 
        have a package that you like to use for small, third party components.
        I specifically have a package named "3rdParty.dpk" that I use for 
        small components that come from other people.  Or, if you are using
        several of my components, you might create a "DFS.dpk" package and 
        use it for all of my DFS components.
    * In the resulting package window, click the Add button.
    * In the Add dialog, on the Add Unit tab, enter the full path name of the 
      component's registration unit (the unit that ends with 'Reg.pas', i.e. 
      'BrowseDrReg.pas') and click OK.
    * You may want to add the other source files (*.pas) to the package as 
      well in the same manner as you did the registration unit.  While this is
      not required, not doing it will cause compiler warnings when the package
      is compiled.  The component will function fine either way, but I 
      personally find the warnings very irritating and am not happy until 
      every compiler warning and hint is gone.
    * If this package is new, or it has never been installed, click the 
      Install button in the package window.  If this package is already 
      installed in Delphi, click the Compile button.

  C++Builder 5 and up:
    * Perform the "Delphi 3 and up, C++Builder 3 and up" steps above, except
      for the last step (Compile or Install).
    * Select the package the component has been added to, and choose 
      Project | Edit Option Source to open the package options in the editor.
    * In the entry for PFLAGS, add the "-LUvcl50" option.  For example:
        <PFLAGS value="-$YD -$W -$O -v -JPHNE -M -LUvcl50"/>
    * Perform the final step from above, Compile or Install.
    * For Borland's official word on this situation, open the C++Builder help
      file and search the index for "dsgnintf.dcu" and see the "Compiling
      packages with DsgnIntf" section.

  Delphi 6 and up:
    * Perform the "Delphi 3, 4, 5, C++Builder 3 & 4" steps above, except
      for the last step (Compile or Install).
    * Add the DesignIDE package to the Requires list of the package into which
      the component is being installed.
    * Perform the final step from above, Compile or Install.
    * This is necessary because of changes to the design-time support units
      introduced in Delphi 6.  For complete information, see the Del6New.hlp
      file in your Delphi 6 Help directory.  In the index, search for
      "upgrade issues" and in the resulting list of topics, select the
      "DsgnIntf renamed and related changes" topic.


Known Issues:
  * Because of the DCX_PARENTCLIP in GetDCEx, moving bar over controls that
    are not involved in the moving process will get a bar drawn on them.
    But, in practice, the bar should never be in a position to move over
    windows that it is not connected with.  Without this, couldn't see bar
    over controls created after it.
  * Does not get along with siblings who are alClient aligned.  Use a TPanel
    as parent of bar and siblings and align the panel as alClient.
  * Needs a keyboard interface.


Revision History:
  1.16:  + Updated for Delphi 6 compatibility.  See updated install directions
           above.
  1.15:  + Updated for C++Builder 5 compatibility.
  1.14:  + George Tasker fixed a nasty recursion problem when aligning things.
           Many thanks to him.
  1.13:  + It's *really* D5 compatible now.  Small change between the D5 eval
           version and the real, shipping D5 version broke it.
  1.12   + Component classname changed.
         + D5 compatibility.
  1.11:  + Added GBarReg unit.  All IDE specific code (i.e. registering the
           component, property editors, etc.) are contained in this unit.  This
           was done for two primary reasons:  1) Using the component in a Delphi
           or C++Builder expert would register the component as well.  2) Reduce
           code size in some cases -- usually the smart linker removes this sort
           of stuff since the app never references it, but now it's for certain
           since it isn't even in the unit.  This change means that you need to
           install the component using the new "registration" unit instead of
           the unit containing the component.
  1.10:  + SetBounds method was inadvertently redeclared in the protected
           section.  It should have been, and now is, in the public section.
  1.09:  + If parent of the bar was a panel, it's BorderWidth was not honored.
           This was fixed by Rob Leland <leland@cais.com>, many thanks to him.
  1.08:  + Added Version property.
  1.07:  + Updated for new DFS.INC file, component tab name, history/comments
           file.
  1.06:  + Optimized painting.  Removed Paint method entirely, BorderStyle is
           now drawn by Windows itself via WS_BORDER style flag (geez, I can be
           dense) and Ctl3D painting is done in WM_ERASEBKGND message handler
           where it is MUCH faster.  This was really bad when MS Plus! was
           installed and windows were redrawn as they were resized.
         + Resizing the parent window will now honor the WindowBMinSize property
           as best it can.  Trying honor both WindowAMinSize and WindowBMinSize
           is going to be a mess (have to handle WM_GETMINMAXINFO) and I'm just
           too lazy to get into it right now.
  1.05:  + Fixed small painting problem when maximizing or restoring window.
         + WindowAMinSize and WindowBMinSize properties added to allow limiting
           of the size a window can be shrunk to.  Most code provided by Beth
           Weiss (bweiss@wpgate1.wpafb.af.mil).
  1.04:  + Fixed problem that could allow bar to be moved under controls that
           were not being separated by the bar.  This would hide the bar from
           the user.
         + Fixed bug that would, under certain conditions, cause the bar to
           have an incorrect thickness.
         + Fixed bug that would allow you to select the same window for both
           WindowA and WindowB properties.  Caused nasty crash when the control
           is removed.
         + Added DragUpdate property that resizes the split windows as you drag
           the grab bar.
  1.03:  + Resource for 16 and 32-bit version.  This takes the place of a
           DCR file, which can't be compatible with both.  See the $R directive
           below. To compile the resource file, use the following
             Delphi 1: BRCC.EXE -foGrabBar.r16 -31 GrabBar.rc
             Delphi 2: BRCC32.EXE -foGrabBar.r32 -w32 GrabBar.rc
  1.02:  + Automatically adjusts windows it owns to proper alignment in this
           way:  Alignment of alNone is not adjusted.  alClient is changed to
           alLeft/alRight or alTop/alBottom based on current divider style.
           alLeft/alRight and alTop/alBottom are validated, i.e. if WindowA
           property is aligned alRight, it is changed to be alLeft, or if
           WindowB was alLeft in gbHorizonal bar, it would be changed to alTop.
         + Changing the style now will now move the control to the center of
           parent window.  Before it would be something silly like flush top or
           left.
  1.01:  + Stupid last minute optimization broke the thing.  Fixed.
  1.00:  + Initial release

